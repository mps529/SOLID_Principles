Single Responsibility Principle
    o A class should only have one reason to change
    o Separation of concerns — different classes handling different, independent
      tasks/problems

Open-Closed Principle
    o Classes should be open for extension but closed for modification

Liskov Substition Principle
    o You should be able to substitute a base type for a subtype

Interface Segregation Principle
    o Don't put too much into an interface; split into separate interfaces
    o YAGNI — You Ain't Going to Need It

Dependency Inversion Principle
    o High-level modules should not depend upon low-level ones; use abstractions

